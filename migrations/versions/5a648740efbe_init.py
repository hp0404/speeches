"""init

Revision ID: 5a648740efbe
Revises: 
Create Date: 2022-10-12 11:11:11.441106

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5a648740efbe'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exports',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('html_contents', sa.LargeBinary(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('documents_metadata',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['exports.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_metadata_id'), 'documents_metadata', ['id'], unique=False)
    op.create_table('sentences',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('document_id', sa.Integer(), nullable=True),
    sa.Column('paragraph_id', sa.Integer(), nullable=False),
    sa.Column('sentence_id', sa.Integer(), nullable=False),
    sa.Column('speaker', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('text_lemmatized', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents_metadata.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('themes',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('document_id', sa.Integer(), nullable=True),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('theme', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents_metadata.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('extracted_features',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('sentence_id', sa.Integer(), nullable=True),
    sa.Column('entity_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('label', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('match', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('match_processed', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('span_location', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.ForeignKeyConstraint(['sentence_id'], ['sentences.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('text_statistics',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('sentence_id', sa.Integer(), nullable=True),
    sa.Column('n_chars', sa.Integer(), nullable=False),
    sa.Column('n_letters', sa.Integer(), nullable=False),
    sa.Column('n_words', sa.Integer(), nullable=False),
    sa.Column('n_long_words', sa.Integer(), nullable=False),
    sa.Column('n_complex_words', sa.Integer(), nullable=False),
    sa.Column('n_simple_words', sa.Integer(), nullable=False),
    sa.Column('n_unique_words', sa.Integer(), nullable=False),
    sa.Column('n_syllables', sa.Integer(), nullable=False),
    sa.Column('n_monosyllable_words', sa.Integer(), nullable=False),
    sa.Column('n_polysyllable_words', sa.Integer(), nullable=False),
    sa.Column('automated_readability_index', sa.Float(), nullable=False),
    sa.Column('coleman_liau_index', sa.Float(), nullable=False),
    sa.Column('flesch_kincaid_grade', sa.Float(), nullable=False),
    sa.Column('flesch_reading_easy', sa.Float(), nullable=False),
    sa.Column('lix', sa.Float(), nullable=False),
    sa.Column('smog_index', sa.Float(), nullable=False),
    sa.Column('ttr', sa.Float(), nullable=False),
    sa.Column('rttr', sa.Float(), nullable=False),
    sa.Column('cttr', sa.Float(), nullable=False),
    sa.Column('sttr', sa.Float(), nullable=False),
    sa.Column('mttr', sa.Float(), nullable=False),
    sa.Column('dttr', sa.Float(), nullable=False),
    sa.Column('mattr', sa.Float(), nullable=False),
    sa.Column('msttr', sa.Float(), nullable=False),
    sa.Column('mtld', sa.Float(), nullable=False),
    sa.Column('mamtld', sa.Float(), nullable=False),
    sa.Column('hdd', sa.Float(), nullable=False),
    sa.Column('simpson_index', sa.Float(), nullable=False),
    sa.Column('hapax_index', sa.Float(), nullable=False),
    sa.Column('morphology', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['sentence_id'], ['sentences.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('text_statistics')
    op.drop_table('extracted_features')
    op.drop_table('themes')
    op.drop_table('sentences')
    op.drop_index(op.f('ix_documents_metadata_id'), table_name='documents_metadata')
    op.drop_table('documents_metadata')
    op.drop_table('exports')
    # ### end Alembic commands ###
